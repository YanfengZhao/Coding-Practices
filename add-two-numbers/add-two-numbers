/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        int carry = 0;
        ListNode head = new ListNode(0);
        ListNode prevNode = head;
        while(l1 != null || l2 != null){
            ListNode newNode = new ListNode(0);
            int sum = 0;
            if(l1 == null){
                sum = l2.val+carry;
                l2 = l2.next;
            }
            else if(l2 == null){
                sum = l1.val+carry;
                l1 = l1.next;
            }
            else{
                sum = l1.val+l2.val+carry;
                l1 = l1.next;
                l2 = l2.next;
            }
            
            if(sum > 9){
                carry = 1;
                newNode.val = sum%10;
                prevNode.next = newNode;
                prevNode = newNode;
            }
            else{
                carry = 0;
                newNode.val = sum;
                prevNode.next = newNode;
                prevNode = newNode;
             }
        }
        if(carry==1){
            prevNode.next = new ListNode(1);
        }
        return head.next;
    }
}
